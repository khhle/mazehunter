/*
int AI(int directionP)
	{
		int up = 1;
		int down = 2;
		int left = 3;
		int right = 4;
		
		float yE = this.transform.position.y;
		float xE = this.transform.position.x;
		
		
		
		float xP = rob.transform.position.x;
		float yP = rob.transform.position.y;
		//Debug.Log("xP" + xP);
		xP = (float)Math.Round (xP);
		yP = (float)Math.Round (yP);;
		
		//Debug.Log("xP" + xP);
		//Debug.Log("xE" + xE);
		if(xE == xP)
		{
			//Debug.Log("=====");
			float isUp = Mathf.Abs( (yE+1)- yP );
			float isDown =  Mathf.Abs( (yE-1)- yP );
			
			if(isUp < isDown)
				return up;
			else
				return down;
			
		}
		
		if(yE == yP)
		{
			float isLeft = Mathf.Abs( (xE-1)- xP );
			float isRight = Mathf.Abs( (xE+1)- xP );
			
			if(isLeft < isRight)
				return left;
			else
				return right;
		}
		
		if(directionP == up || directionP == down)
		{
			float isUp = Mathf.Abs( (yE+1)- yP );
			float isDown =  Mathf.Abs( (yE-1)- yP );
			
			if(isUp < isDown)
				return up;
			else
				return down;
		}
		
		if(directionP == left || directionP == right)
		{
			float isLeft = Mathf.Abs( (xE-1)- xP );
			float isRight = Mathf.Abs( (xE+1)- xP );
			
			if(isLeft < isRight)
				return left;
			else
				return right;
		}
		
		
		return 0;
		
	}

	int AI2(int last,int directionP)
	{
		int up = 1;
		int down = 2;
		int left = 3;
		int right = 4;
		
		float yE = this.transform.position.y;
		float xE = this.transform.position.x;
		
		float xP = rob.transform.position.x;
		float yP = rob.transform.position.y;
		
		if(yE == yP || xE == xP)
			return last;
		if(directionP == up || directionP == down)
		{
			float isLeft = Mathf.Abs( (xE-1)- xP );
			float isRight = Mathf.Abs( (xE+1)- xP );
			
			if(isLeft < isRight)
				return left;
			else
				return right;
		}
		
		if(directionP == left || directionP == right)
		{
			float isUp = Mathf.Abs( (yE+1)- yP );
			float isDown =  Mathf.Abs( (yE-1)- yP );
			
			if(isUp < isDown)
				return up;
			else
				return down;
		}
		
		return 0;
		
	}
	 */
